# =====================================================
# Sudal - Social Quiz Platform
# Environment Variables Configuration Template
# =====================================================
# Legend:
# [REQUIRED] - Required for the application to function properly
# [OPTIONAL] - Optional configuration with defaults
# [DEV-ONLY] - Only needed in development environment
# =====================================================
# Note: Copy this file to .env for local development
# For production/canary, create .env.production or .env.canary
# These environment-specific files should NOT be committed to version control
# =====================================================

# Application Environment
# -----------------------------------------------------
APP_ENV=dev  # [REQUIRED] Options: dev, canary, production

# Server Configuration
# -----------------------------------------------------
SERVER_PORT=8080  # [REQUIRED] Note: PORT is also supported for Cloud Run compatibility
LOG_LEVEL=debug   # [REQUIRED] Options: debug, info, warn, error

# Database Configuration
# -----------------------------------------------------
# You can either set POSTGRES_DSN directly or use the individual components
# POSTGRES_DSN=postgres://user:password@localhost:5432/quizapp_db?sslmode=disable  # [OPTIONAL] Alternative to individual components

# Or use individual components (recommended for development):
DB_HOST=localhost      # [REQUIRED] Database host (set to 'db' when using docker-compose)
DB_PORT=5432           # [OPTIONAL] Default: 5432
DB_USER=user           # [REQUIRED] Database username
DB_PASSWORD=password   # [REQUIRED] Database password
DB_NAME=quizapp_db     # [REQUIRED] Database name
DB_SSLMODE=disable     # [OPTIONAL] Default: disable, Options: disable, require, verify-ca, verify-full

# SSL/TLS Configuration (optional, not needed for local development)
# DB_SSL_CERT=/path/to/client-cert.pem      # [OPTIONAL] Client certificate file
# DB_SSL_KEY=/path/to/client-key.pem        # [OPTIONAL] Client private key file
# DB_SSL_ROOT_CERT=/path/to/ca-cert.pem     # [OPTIONAL] Root certificate file

# Connection Pool Configuration
# -----------------------------------------------------
DB_MAX_OPEN_CONNS=25                    # [OPTIONAL] Default: 25, Maximum number of open connections
DB_MAX_IDLE_CONNS=5                     # [OPTIONAL] Default: 5, Maximum number of idle connections
DB_CONN_MAX_LIFETIME_SECONDS=3600       # [OPTIONAL] Default: 3600 (1 hour), Connection maximum lifetime
DB_CONN_MAX_IDLE_TIME_SECONDS=300       # [OPTIONAL] Default: 300 (5 minutes), Connection maximum idle time
DB_CONNECT_TIMEOUT_SECONDS=30           # [OPTIONAL] Default: 30, Connection timeout

# Redis Configuration
# -----------------------------------------------------
REDIS_ADDR=localhost:6379               # [REQUIRED] Redis server address (set to 'redis:6379' when using docker-compose)
REDIS_PASSWORD=                         # [OPTIONAL] Redis password (leave empty if no password)

REDIS_DB=0                              # [OPTIONAL] Default: 0, Redis database number

# Redis Connection Pool Configuration
# -----------------------------------------------------
REDIS_POOL_SIZE=10                      # [OPTIONAL] Default: 10, Maximum number of socket connections
REDIS_MIN_IDLE_CONNS=2                  # [OPTIONAL] Default: 2, Minimum number of idle connections
REDIS_POOL_TIMEOUT=4                    # [OPTIONAL] Default: 4 seconds, Amount of time client waits for connection if all connections are busy
REDIS_IDLE_TIMEOUT=300                  # [OPTIONAL] Default: 300 seconds (5 minutes), Amount of time after which client closes idle connections

# Redis Timeout Configuration
# -----------------------------------------------------
REDIS_DIAL_TIMEOUT=5                    # [OPTIONAL] Default: 5 seconds, Timeout for establishing new connections
REDIS_READ_TIMEOUT=3                    # [OPTIONAL] Default: 3 seconds, Timeout for socket reads
REDIS_WRITE_TIMEOUT=3                   # [OPTIONAL] Default: 3 seconds, Timeout for socket writes

# Redis Retry Configuration
# -----------------------------------------------------
REDIS_MAX_RETRIES=3                     # [OPTIONAL] Default: 3, Maximum number of retries before giving up
REDIS_MIN_RETRY_BACKOFF=8               # [OPTIONAL] Default: 8 milliseconds, Minimum backoff between each retry
REDIS_MAX_RETRY_BACKOFF=512             # [OPTIONAL] Default: 512 milliseconds, Maximum backoff between each retry

# Firebase Configuration
# -----------------------------------------------------
GOOGLE_APPLICATION_CREDENTIALS=secrets/firebase_admin_key.json  # [REQUIRED] Path to Firebase admin credentials JSON file
FIREBASE_PROJECT_ID=...
FIREBASE_WEB_API_KEY=...  